<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.shelter_project.personal.PersonalMapper">
    
    <!-- 페이징 처리: ROW_NUMBER() 대신 LIMIT 사용 -->
    <select id="PagingList" parameterType="java.util.HashMap" resultType="com.shelter_project.personal.PersonalDTO">
        SELECT * FROM personal
        <where>
            <if test="type != 'all'">
                AND spcs = #{type}
            </if>
        </where>
        ORDER BY animal_no DESC
        LIMIT #{start}, #{limit}
    </select>
    
    <select id="boardCount">
        select count(animal_no) from personal
        <where>
            <if test="type != null and type != 'all'">
                spcs = #{type}
            </if>
        </where>
    </select>
    
    <!-- 개인 게시물 등록: AUTO_INCREMENT가 설정된 animal_no는 자동 증가 -->
    <insert id="personalWriteProc" useGeneratedKeys="true" keyProperty="animal_no">
        insert into personal (nm, spcs, breeds, sexdstn, age, bdwgh, content, time, author) 
        values (#{nm}, #{spcs}, #{breeds}, #{sexdstn}, #{age}, #{bdwgh}, #{content}, #{time}, #{author})
    </insert>
    
    <!-- 개인 이미지 등록 -->
    <insert id="insertPersonalImages">
        INSERT INTO personal_images (animal_no, image_path) 
        VALUES (#{animal_no}, #{image_path})
    </insert>
    
    <!-- 특정 animal_no의 게시물 가져오기 -->
    <select id="personalContent">
        select * from personal where animal_no = #{animal_no}
    </select>
    
    <!-- 특정 animal_no에 해당하는 이미지 가져오기 -->
    <select id="getImg" resultType="String">
        select image_path from personal_images where animal_no = #{animal_no}
    </select>
    
    <!-- 특정 animal_no의 이미지 번호 가져오기 -->
    <select id="getImageNo" resultType="java.lang.Integer">
        select image_no from personal_images where animal_no = #{animal_no}
    </select>
    
    <!-- 최근 4개의 게시물 가져오기 -->
    <select id="getMainContent">
        select * from personal order by animal_no desc limit 4
    </select>
    
    <!-- 개인 게시물 수정 -->
    <update id="personalModifyProc">
        update personal set
        nm = #{nm},
        spcs = #{spcs},
        breeds = #{breeds},
        sexdstn = #{sexdstn},
        age = #{age},
        bdwgh = #{bdwgh},
        content = #{content},
        time = #{time},
        author = #{author}
        where animal_no=#{animal_no}
    </update>

    <!-- 이미지 삭제 -->
    <delete id="deleteImage">
        delete from personal_images where image_path = #{getImg} and animal_no = #{animal_no}
    </delete>
    
    <!-- 개인 게시물 삭제 -->
    <delete id="personalDelete">
        delete from personal where animal_no = #{animal_no}
    </delete>
    
    <!-- 검색 기능: ROW_NUMBER() 대신 LIMIT 사용 -->
    <select id="perSearch" parameterType="java.util.HashMap" resultType="com.shelter_project.personal.PersonalDTO">
        SELECT * FROM personal
        <where>
            <if test="searchColumn != null and keyword != null and keyword != ''">
                <choose>
                    <when test="searchColumn == 'nm'">
                        AND nm LIKE CONCAT('%', #{keyword}, '%')
                    </when>
                    <otherwise>
                        AND breeds LIKE CONCAT('%', #{keyword}, '%')
                    </otherwise>
                </choose>
            </if>
        </where>
        ORDER BY animal_no DESC
        LIMIT #{start}, #{limit}
    </select>
    
    <select id="getSearchCount">
        select count(*) from personal 
        <where>
            <if test="searchColumn != null and keyword != null and keyword != ''">
                <choose>
                    <when test="searchColumn == 'nm'">
                        AND nm LIKE CONCAT('%', #{keyword}, '%')
                    </when>
                    <otherwise>
                        AND breeds LIKE CONCAT('%', #{keyword}, '%')
                    </otherwise>
                </choose>
            </if>
        </where>
    </select>
    
    <select id="like_check">
		select count(like_no) from likes where member_id = #{member_id} and post_no = #{post_no} and post_type = #{post_type}
	</select>
</mapper>
